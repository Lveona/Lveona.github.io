<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lveona&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-09T09:07:08.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Lveona</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/08/09/nodeAangular/"/>
    <id>http://yoursite.com/2018/08/09/nodeAangular/</id>
    <published>2018-08-09T09:07:08.000Z</published>
    <updated>2018-08-09T09:07:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mac部署Node-js环境安装Angular-CLI"><a href="#mac部署Node-js环境安装Angular-CLI" class="headerlink" title="mac部署Node.js环境安装Angular CLI"></a>mac部署Node.js环境安装Angular CLI</h1><blockquote><p>安装Angular CLI，需要先安装Node.js环境。Angular官网提示node需要8.x，npm 5.x以上的版本。</p></blockquote><p>之前搭建hexo环境也需要node环境，使用homebrew安装的node环境，版本较低，所以需要卸载现有版本重新安装。</p><h3 id="删除node和npm"><a href="#删除node和npm" class="headerlink" title="删除node和npm"></a>删除node和npm</h3><pre><code>npm config get prefixcd [刚才得到的路径]cd lib &amp;&amp; rm -rf node_modulescd /usr/local/lib &amp;&amp; sudo rm -rf node*cd /usr/local/include &amp; sudo rm -rf node*brew uninstall node (如果你是通过brew安装的，才需要执行此步骤)cd /usr/local/binsudo rm -rf npmsudo rm -rf nodesudo rm -rf /usr/local/share/man/man1/node.1sudo rm -rf /usr/local/lib/dtrace/node.dsudo rm -rf ~/.npm</code></pre><h3 id="homebrew安装nvm"><a href="#homebrew安装nvm" class="headerlink" title="homebrew安装nvm"></a>homebrew安装nvm</h3><p>安装管理node版本工具有nvm、n，这里选择nvm。使用homebrew<br>进行安装。后配置环境变量，这里使用的是zsh，在.zshrc这个配置文件中配置，如果是bash，修改.bash_profile文件。</p><pre><code>homebrew install -g nvmvi ~/.zshrc , 在最后一行加上export NVM_DIR=&quot;$HOME/.nvm&quot;[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot;重新启动配置source ~/.zshrc</code></pre><h3 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h3><p>查看可以安装node版本</p><pre><code>nvm ls-romte</code></pre><p>安装指定node版本,这里使用淘宝镜像</p><pre><code>nvm install node v8.10.0</code></pre><p><img src="http://ww1.sinaimg.cn/large/bc84935bly1fu3jnlo2qij214u0gw42q.jpg" alt=""></p><p>查看node npm版本</p><pre><code>node -vnpm -v</code></pre><h3 id="安装Angular-CLI"><a href="#安装Angular-CLI" class="headerlink" title="安装Angular CLI"></a>安装Angular CLI</h3><p>安装@angular/cli</p><pre><code>npm install -g @angular/cli</code></pre><p>查询安装的Node路径</p><pre><code>npm get prefix</code></pre><p>把刚才的路径配到你的终端配置文件中.zshrc或.bashrc</p><pre><code>alias ng=&quot;/刚才你得到的路径/lib/node_modules/@angular/cli/bin/ng&quot;</code></pre><p>使用ng命令查看</p><pre><code>ng -v</code></pre><p><img src="http://ww1.sinaimg.cn/large/bc84935bly1fu3k6i5i36j20po0ps43x.jpg" alt=""><br>如此angularcli安装完成</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;mac部署Node-js环境安装Angular-CLI&quot;&gt;&lt;a href=&quot;#mac部署Node-js环境安装Angular-CLI&quot; class=&quot;headerlink&quot; title=&quot;mac部署Node.js环境安装Angular CLI&quot;&gt;&lt;/a&gt;mac部署
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于Fragment中的onAttach()方法</title>
    <link href="http://yoursite.com/2018/01/12/fragmentOnAttach/"/>
    <id>http://yoursite.com/2018/01/12/fragmentOnAttach/</id>
    <published>2018-01-12T07:06:35.000Z</published>
    <updated>2018-01-12T08:22:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天算是对老大当时说的‘真正该紧张的时候应该是在上线之后’这句话小有体会。   </p><p>因为需求，所以在项目中fragment和MainActivity的传值我用的接口回调的方式，在onAttach()中声明接口。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">    public void onAttach(Context context) &#123;</span><br><span class="line">        super.onAttach(context);</span><br><span class="line">       if (context instanceof Fragment2AtyListener) &#123;</span><br><span class="line">            mFragment2AtyListener = (Fragment2AtyListener) context;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            throw new IllegalArgumentException(&quot;Activity must implements Fragment2AtyListener&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>fragment网络请求成功后调用接口方法。</p><pre><code>int sum = 0;while (iterator.hasNext()) {    Map.Entry entry = (Map.Entry) iterator.next();    sum += (Integer.parseInt(String.valueOf(entry.getValue())));}mFragment2AtyListener.onFragment2Aty(String.valueOf(sum));</code></pre><p>项目上线后问题出现了，用户登录闪退…  但是换个手机登录相同的账号就没有问题。万脸懵逼…  (丝毫没想到可能是因为Android版本问题引起的)。无奈之下集成了Bugly,希望能找到闪退的原因。  </p><p><img src="/images/bugly.png" alt="bugly">  </p><p>空对象引用… emmm…  onAttach()出问题了。百度一下发现这里使用的fragment是app包下的，如果使用v4包下的则不会出现此问题，属于fragment的bug。而且在低版本中不会调用<code>onAttach(Context context)</code> 会调用弃用的<code>onAttach(Activity activity)</code>方法。</p><p>###end</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">@TargetApi(23)</span><br><span class="line">@Override</span><br><span class="line">public void onAttach(Context context) &#123;</span><br><span class="line">    super.onAttach(context);</span><br><span class="line">    onAttachToContext(context);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@SuppressWarnings(&quot;deprecation&quot;)</span><br><span class="line">@Override</span><br><span class="line">public void onAttach(Activity activity) &#123;</span><br><span class="line">    super.onAttach(activity);</span><br><span class="line">    if (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.M) &#123;</span><br><span class="line">        onAttachToContext(activity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">protected void onAttachToContext(Context context) &#123;</span><br><span class="line">    if (context instanceof Fragment2AtyListener) &#123;</span><br><span class="line">        mFragment2AtyListener = (Fragment2AtyListener) context;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        throw new IllegalArgumentException(&quot;Activity must implements Fragment2AtyListener&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如此就ok啦~ 虽然描述的很简单，但是找的过程中内心还是仿佛有万只羊驼在踏过。尤其是开始看Bugly的异常我以为是sum空了。 各种纠结…..   emmm…..</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天算是对老大当时说的‘真正该紧张的时候应该是在上线之后’这句话小有体会。   &lt;/p&gt;
&lt;p&gt;因为需求，所以在项目中fragment和MainActivity的传值我用的接口回调的方式，在onAttach()中声明接口。&lt;/p&gt;
&lt;figure class=&quot;highli
      
    
    </summary>
    
    
  </entry>
  
</feed>
